pipeline {
    agent { label 'devsecops-demo-private-jenkins-slave' }
    /*options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 1, unit: 'SECONDS')
    }*/
    stages {
          stage("Maven Build and Sonarqube Analysis") {
            steps {
              withSonarQubeEnv('devsecops-demo-sonarqube-server') {
                sh 'mvn clean install sonar:sonar'
              }
            }
          }
          stage("Sonarqube Quality Gate") {
            steps {
              timeout(time: 3, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
          stage('Docker Build') {
            steps {
              sh 'cp /home/ec2-user/workspace/ci-pipeline/target/devsecops-demo-project-1.0-SNAPSHOT.war .'
              sh 'docker build -t devsecops-demo-java-app:1.0.0 .'
            }
          }
          stage('Docker Tag and Push to ECR') {
            steps {
              sh '''
              aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 277565952452.dkr.ecr.ap-southeast-1.amazonaws.com
              export IMAGE_ID=$(sudo docker images --filter=reference=devsecops-demo-java-app --format "{{.ID}}")
              echo $IMAGE_ID
              docker tag ${IMAGE_ID} 277565952452.dkr.ecr.ap-southeast-1.amazonaws.com/devsecops-demo-ecr:1.0.0
              docker push 277565952452.dkr.ecr.ap-southeast-1.amazonaws.com/devsecops-demo-ecr:1.0.0
              '''
            }
          }
          /*stage('Docker ECR Scan') {
            steps {
              sh 'aws ecr start-image-scan \
                     --repository-name devsecops-demo-ecr \
                    --image-id imageDigest=sha256:c3e806375987129f4fb003e09aa09210f7f9d042546bd1cbf36ce174c0fb630b'
            }
          }*/
    }
}