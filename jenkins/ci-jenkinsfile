pipeline {
    agent { label 'devsecops-demo-private-jenkins-slave' }
    /*options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 1, unit: 'SECONDS')
    }*/
    stages {
          stage("Maven Build and Sonarqube Analysis") {
            steps {
              withSonarQubeEnv('devsecops-demo-sonarqube-server') {
                sh 'mvn clean package sonar:sonar'
              }
            }
          }
          stage("Sonarqube Quality Gate") {
            steps {
              timeout(time: 3, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
          stage('Docker Build') {
            steps {
              sh 'cp /home/ec2-user/workspace/ci-pipeline/target/devsecops-demo-project-1.0-SNAPSHOT.jar .'
              sh 'docker build -t devsecops-demo-java-app:1.0.0 .'
            }
          }
          stage('Docker Scan') {
            steps {
              sh 'echo "This is scan stage"'
            }
          }
          stage('Docker Tag and Push to ECR') {
            steps {
              sh 'aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 277565952452.dkr.ecr.ap-southeast-1.amazonaws.com'
              sh 'export IMAGE_ID=$(sudo docker images --filter=reference=devsecops-demo-java-app --format "{{.ID}}")'
              sh 'echo $IMAGE_ID'
              sh 'docker tag ${IMAGE_ID} 277565952452.dkr.ecr.ap-southeast-1.amazonaws.com/devsecops-demo-ecr:1.0.0'
              sh 'docker push 277565952452.dkr.ecr.ap-southeast-1.amazonaws.com/devsecops-demo-ecr:1.0.0'
            }
          }
    }
}